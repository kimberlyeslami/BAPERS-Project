/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI_Package;

import Database_Package.DBConnectivity;
import Process_Package.Task;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Usaamah, Felice Gregorio
 * @version     (11/04/2018) version 1
 * @since       (11/04/2018) version 1
 */
public class AddTask extends javax.swing.JFrame {
   /** New JFrame. */
    private final JFrame frame;
   /** The task to be added. */
    private Task task;
    /** The Employees ID. */
    private final String empID;
    
    /**
     * Creates new form Tasks
     * @param frame new JFrame
     * @param empID The employee ID
     */
    public AddTask(JFrame frame, String empID) {
        this.empID = empID;
        this.frame = frame;
        initComponents();
        sort();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        cancel_btn = new javax.swing.JButton();
        add_btn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tasks_tbl = new javax.swing.JTable();
        Search_lbl = new javax.swing.JLabel();
        Search_txt = new javax.swing.JTextField();
        search_btn = new javax.swing.JButton();
        Location_lbl = new javax.swing.JLabel();
        Location_cmbo = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        Tasks_lbl = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        cancel_btn.setBackground(new java.awt.Color(0, 153, 255));
        cancel_btn.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        cancel_btn.setForeground(new java.awt.Color(255, 255, 255));
        cancel_btn.setText("Cancel");
        cancel_btn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        cancel_btn.setContentAreaFilled(false);
        cancel_btn.setOpaque(true);
        cancel_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancel_btnActionPerformed(evt);
            }
        });

        add_btn.setBackground(new java.awt.Color(0, 153, 255));
        add_btn.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        add_btn.setForeground(new java.awt.Color(255, 255, 255));
        add_btn.setText("Add");
        add_btn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        add_btn.setContentAreaFilled(false);
        add_btn.setOpaque(true);
        add_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_btnActionPerformed(evt);
            }
        });

        DBConnectivity myDB = new DBConnectivity();
        myDB.connect();
        ResultSet rs = myDB.read("SELECT task_ID AS 'Task ID', task_description AS 'Description', location AS 'Location', price AS 'Price', duration AS 'Duration', shelf_slot AS 'Shelf Slot' FROM Task WHERE deleted = false");
        tasks_tbl.setModel(resultSetToTableModel(rs));
        tasks_tbl.getTableHeader().setReorderingAllowed(false);
        myDB.closeConnection();
        jScrollPane1.setViewportView(tasks_tbl);

        Search_lbl.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        Search_lbl.setText("Search:");

        Search_txt.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N

        search_btn.setBackground(new java.awt.Color(0, 153, 255));
        search_btn.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        search_btn.setForeground(new java.awt.Color(255, 255, 255));
        search_btn.setText("Search");
        search_btn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        search_btn.setContentAreaFilled(false);
        search_btn.setOpaque(true);
        search_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_btnActionPerformed(evt);
            }
        });

        Location_lbl.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        Location_lbl.setText("Location:");

        Location_cmbo.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        Location_cmbo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "Copy Room", "Dark Room", "Development Area", "Printing Room", "Finishing Room", "Packing Department" }));
        Location_cmbo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                Location_cmboItemStateChanged(evt);
            }
        });
        Location_cmbo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Location_cmboActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(0, 153, 255));

        Tasks_lbl.setBackground(new java.awt.Color(0, 153, 255));
        Tasks_lbl.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        Tasks_lbl.setForeground(new java.awt.Color(255, 255, 255));
        Tasks_lbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Tasks_lbl.setText("Tasks");
        Tasks_lbl.setOpaque(true);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Tasks_lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(362, 362, 362))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(Tasks_lbl)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(142, 142, 142)
                .addComponent(cancel_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(add_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(165, 165, 165))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(Search_lbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Search_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(search_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 262, Short.MAX_VALUE)
                .addComponent(Location_lbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Location_cmbo, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Search_lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Search_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(search_btn)
                    .addComponent(Location_lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Location_cmbo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancel_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(add_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Location_cmboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Location_cmboActionPerformed
        
    }//GEN-LAST:event_Location_cmboActionPerformed
    /**
     * Search Button
     * <p>
     * Filters through the table, Searching for the Task.
     */
    private void search_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_btnActionPerformed
    
        String s = Search_txt.getText();
        filter(s);
    }//GEN-LAST:event_search_btnActionPerformed
    /**
     * Cancel Button
     * <p>
     * Closes the form taking you back to the previous form.
     */
    private void cancel_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancel_btnActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancel_btnActionPerformed
    /**
     * Add Button
     * <p>
     * Adds a new task to the table.
     */
    private void add_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_btnActionPerformed
        int row = tasks_tbl.getSelectedRow();
        if (row == -1){
            JOptionPane.showMessageDialog(null, "Please select a Task!", "Error!", JOptionPane.ERROR_MESSAGE);
        } else {
            if (frame.getName().equals("createJob")){
                CreateJobs cj = (CreateJobs) frame;
                Object taskID = tasks_tbl.getValueAt(row, 0);
                task = new Task(Integer.parseInt(taskID.toString()));
                cj.tasks.add(task);
                DefaultListModel lstModel = new DefaultListModel();
                for(Task t : cj.tasks){
                    lstModel.addElement(t.getTaskID() + " - " + t.getDescription());
                }
                cj.tasks_lst.setModel(lstModel);
                this.dispose();
            } else {
                VariableDiscountForm vd = (VariableDiscountForm) frame;
                Object taskID = tasks_tbl.getValueAt(row, 0);
                task = new Task(Integer.parseInt(taskID.toString()));
                DefaultTableModel dtm = (DefaultTableModel) vd.Tasks_Table.getModel();
                if (vd.discounts.putIfAbsent(task.getTaskID(), Double.parseDouble(vd.Discount_Field.getText())) == null){
                    Object[] object = {task.getTaskID(), vd.Discount_Field.getText()};
                    dtm.addRow(object);
                } else {
                    vd.discounts.replace(task.getTaskID(), Double.parseDouble(vd.Discount_Field.getText()));
                    System.out.println(vd.discounts.get(task.getTaskID()));
                    for (int i = 0; i < dtm.getRowCount(); i++){
                        System.out.println(dtm.getValueAt(i, 0));
                        System.out.println(dtm.getValueAt(i, 1));
                        if (dtm.getValueAt(i, 0).equals(task.getTaskID())){
                            dtm.setValueAt(task.getTaskID(), i, 0);
                            dtm.setValueAt(vd.Discount_Field.getText(), i, 1);
                        }
                    }  
                }
                
                
                this.dispose();
            }
            
//            DefaultTableModel dtm = (DefaultTableModel) tasks_tbl.getModel();
//            dtm.removeRow(row);
        }
    }//GEN-LAST:event_add_btnActionPerformed
    /**
     * Location State Changed
     * <p>
     * Filters through the table looking for the selected item.
     */
    private void Location_cmboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_Location_cmboItemStateChanged
        String s = Location_cmbo.getSelectedItem().toString();
        filter(s);
    }//GEN-LAST:event_Location_cmboItemStateChanged
     /**
     * Sort
     * <p>
     * Sorts through the table.
     */
    public void sort(){
        DefaultTableModel dm = (DefaultTableModel) tasks_tbl.getModel();
        TableRowSorter<DefaultTableModel> trs = new TableRowSorter<>(dm);
        tasks_tbl.setRowSorter(trs);
    }
     /**
     * Filter
     * <p>
     * Filters through the table.
     */
    public void filter(String s){
        DefaultTableModel dm = (DefaultTableModel) tasks_tbl.getModel();
        TableRowSorter<DefaultTableModel> trs = new TableRowSorter<>(dm);
        tasks_tbl.setRowSorter(trs);
        
        if (!"None".equals(s) || s.isEmpty()){
            trs.setRowFilter(RowFilter.regexFilter(s));
        } else {
            tasks_tbl.setRowSorter(trs);
        }
    }
    
     /**
     * Table
     * <p>
     * Set up a new table with values.
     * @return Populated table with the task values.
     */
    public static DefaultTableModel resultSetToTableModel(ResultSet rs) {
        ResultSetMetaData md;
        
        Vector<String> columnNames = new Vector<>();
        Vector<Vector<Object>> data = new Vector<>();
        
        try {
            md = rs.getMetaData();
            
            // names of columns
            int columnCount = md.getColumnCount();
            for (int i = 1; i <= columnCount; i++) {
                columnNames.add(md.getColumnLabel(i));
            }

            // data of the table
            while (rs.next()) {
                Vector<Object> vector = new Vector<>();
                for (int i = 1; i <= columnCount; i++) {
                    vector.add(rs.getObject(i));
                }
                data.add(vector);
            }
        
        } catch (SQLException ex) {
            Logger.getLogger(InspectTasks.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        return new DefaultTableModel(data, columnNames);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tasks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tasks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tasks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tasks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddTask(new CreateJobs("Office Manger", "FG12"), "FG12").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Location_cmbo;
    private javax.swing.JLabel Location_lbl;
    private javax.swing.JLabel Search_lbl;
    private javax.swing.JTextField Search_txt;
    private javax.swing.JLabel Tasks_lbl;
    private javax.swing.JButton add_btn;
    private javax.swing.JButton cancel_btn;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton search_btn;
    private javax.swing.JTable tasks_tbl;
    // End of variables declaration//GEN-END:variables
}
