/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI_Package;

import Account_Package.Customer;
import Database_Package.DBConnectivity;
import Process_Package.Job;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Allen, Felice Gregorio
 * @version     (04/04/2018) version 2
 * @since       (26/03/2018) version 1
 */
public class Inspect_Jobs extends javax.swing.JFrame {
    /** The Employee Job role*/
    private final String jobRole;
    /** The Employees ID */
    private final String empID;
    
    
    /**
     * Creates new form Inspect_Jobs.
     * 
     * @param jobRole Employees Job role
     * @param empID
     */
    public Inspect_Jobs(String jobRole, String empID) {
        this.empID = empID;
        this.jobRole = jobRole;
        initComponents();
        sort();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jobs_tbl = new javax.swing.JTable();
        search_lbl = new javax.swing.JLabel();
        accptDate_lbl = new javax.swing.JLabel();
        status_lbl = new javax.swing.JLabel();
        search_btn = new javax.swing.JButton();
        status_cmbo = new javax.swing.JComboBox<>();
        search_txt = new javax.swing.JTextField();
        accptDate_dte = new com.toedter.calendar.JDateChooser();
        priority_cmbo = new javax.swing.JComboBox<>();
        priority_lbl = new javax.swing.JLabel();
        deadline_dte = new com.toedter.calendar.JDateChooser();
        deadline_lbl = new javax.swing.JLabel();
        reset_btn = new javax.swing.JButton();
        back_btn = new javax.swing.JButton();
        makePayment_btn = new javax.swing.JButton();
        inspectTasks_btn = new javax.swing.JButton();
        makeEnquiry_btn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        btnHomePage = new javax.swing.JButton();
        btnLogOut = new javax.swing.JButton();
        jTextField5 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setName("inspectJobs"); // NOI18N

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(700, 475));

        jobs_tbl.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        DBConnectivity myDB = new DBConnectivity();
        myDB.connect();
        ResultSet rs = myDB.read("SELECT customer_id AS 'Customer ID', job_code AS 'Job Code', special_instruction AS 'Instructions', priority AS 'Priority', price AS 'Price', "
            + "DATE(accepted) AS 'Date Accepted', TIME(accepted) AS 'Time Accepted', deadline AS 'Deadline', Job.status AS 'Status' FROM Job");
        jobs_tbl.setModel(resultSetToTableModel(rs));
        myDB.closeConnection();
        jobs_tbl.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jobs_tbl);

        search_lbl.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        search_lbl.setText("Search:");
        search_lbl.setToolTipText("");

        accptDate_lbl.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        accptDate_lbl.setText("Date Accepted:");
        accptDate_lbl.setToolTipText("");

        status_lbl.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        status_lbl.setText("Status:");
        status_lbl.setToolTipText("");

        search_btn.setBackground(new java.awt.Color(0, 153, 255));
        search_btn.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        search_btn.setForeground(new java.awt.Color(255, 255, 255));
        search_btn.setText("Search");
        search_btn.setBorder(null);
        search_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_btnActionPerformed(evt);
            }
        });

        status_cmbo.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        status_cmbo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "Pending", "Active", "Completed" }));
        status_cmbo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                status_cmboItemStateChanged(evt);
            }
        });

        search_txt.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N

        accptDate_dte.setDateFormatString("yyyy-MM-dd");
        accptDate_dte.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                accptDate_dteFocusLost(evt);
            }
        });
        accptDate_dte.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                accptDate_dteInputMethodTextChanged(evt);
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        accptDate_dte.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                accptDate_dtePropertyChange(evt);
            }
        });
        accptDate_dte.addVetoableChangeListener(new java.beans.VetoableChangeListener() {
            public void vetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {
                accptDate_dteVetoableChange(evt);
            }
        });

        priority_cmbo.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        priority_cmbo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "Low", "Normal", "High" }));
        priority_cmbo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                priority_cmboItemStateChanged(evt);
            }
        });

        priority_lbl.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        priority_lbl.setText("Priority:");
        priority_lbl.setToolTipText("");

        deadline_dte.setDateFormatString("yyyy-MM-dd");
        deadline_dte.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                deadline_dteFocusLost(evt);
            }
        });
        deadline_dte.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                deadline_dteInputMethodTextChanged(evt);
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        deadline_dte.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                deadline_dtePropertyChange(evt);
            }
        });
        deadline_dte.addVetoableChangeListener(new java.beans.VetoableChangeListener() {
            public void vetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {
                deadline_dteVetoableChange(evt);
            }
        });

        deadline_lbl.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        deadline_lbl.setText("Deadline:");
        deadline_lbl.setToolTipText("");

        reset_btn.setBackground(new java.awt.Color(0, 153, 255));
        reset_btn.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        reset_btn.setForeground(new java.awt.Color(255, 255, 255));
        reset_btn.setText("Reset");
        reset_btn.setBorder(null);
        reset_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reset_btnActionPerformed(evt);
            }
        });

        back_btn.setBackground(new java.awt.Color(0, 153, 255));
        back_btn.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        back_btn.setForeground(new java.awt.Color(255, 255, 255));
        back_btn.setText("Back");
        back_btn.setBorder(null);
        back_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                back_btnActionPerformed(evt);
            }
        });

        makePayment_btn.setBackground(new java.awt.Color(0, 153, 255));
        makePayment_btn.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        makePayment_btn.setForeground(new java.awt.Color(255, 255, 255));
        makePayment_btn.setText("Make Payment");
        makePayment_btn.setBorder(null);
        makePayment_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                makePayment_btnActionPerformed(evt);
            }
        });

        inspectTasks_btn.setBackground(new java.awt.Color(0, 153, 255));
        inspectTasks_btn.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        inspectTasks_btn.setForeground(new java.awt.Color(255, 255, 255));
        inspectTasks_btn.setText("Inspect Tasks");
        inspectTasks_btn.setBorder(null);
        inspectTasks_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inspectTasks_btnActionPerformed(evt);
            }
        });

        makeEnquiry_btn.setBackground(new java.awt.Color(0, 153, 255));
        makeEnquiry_btn.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        makeEnquiry_btn.setForeground(new java.awt.Color(255, 255, 255));
        makeEnquiry_btn.setText("Make Enquiry");
        makeEnquiry_btn.setBorder(null);
        makeEnquiry_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                makeEnquiry_btnActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(0, 153, 255));

        btnHomePage.setBackground(new java.awt.Color(255, 255, 255));
        btnHomePage.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        btnHomePage.setForeground(new java.awt.Color(0, 153, 255));
        btnHomePage.setText("Home Page");
        btnHomePage.setBorder(null);
        btnHomePage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomePageActionPerformed(evt);
            }
        });

        btnLogOut.setBackground(new java.awt.Color(255, 255, 255));
        btnLogOut.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        btnLogOut.setForeground(new java.awt.Color(0, 153, 255));
        btnLogOut.setText("Logout");
        btnLogOut.setBorder(null);
        btnLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogOutActionPerformed(evt);
            }
        });

        jTextField5.setBackground(new java.awt.Color(0, 153, 255));
        jTextField5.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jTextField5.setForeground(new java.awt.Color(255, 255, 255));
        jTextField5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField5.setText("Inspect Jobs");
        jTextField5.setToolTipText("");
        jTextField5.setBorder(null);
        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });

        jLabel11.setText("LOGO");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnLogOut, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnHomePage, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnLogOut)
                            .addComponent(btnHomePage)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 31, Short.MAX_VALUE)
                .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(search_lbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(search_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(search_btn)
                        .addGap(15, 15, 15)
                        .addComponent(status_lbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(status_cmbo, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(priority_lbl))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(accptDate_lbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(accptDate_dte, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(deadline_lbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deadline_dte, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(priority_cmbo, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(reset_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(back_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(68, 68, 68)
                .addComponent(makePayment_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 75, Short.MAX_VALUE)
                .addComponent(inspectTasks_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(makeEnquiry_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(search_lbl)
                    .addComponent(search_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(search_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(status_lbl)
                    .addComponent(status_cmbo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(priority_lbl)
                    .addComponent(priority_cmbo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(deadline_lbl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(reset_btn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(accptDate_dte, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(deadline_dte, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(accptDate_lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(inspectTasks_btn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(back_btn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(makePayment_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(makeEnquiry_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 729, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 524, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField5ActionPerformed
     /**
     * Logout Button
     * <p>
     * Closes the form and takes you back to the login form.
     */
    private void btnLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogOutActionPerformed
        this.dispose();
        Login_Form login = new Login_Form();
        login.setVisible(true);
    }//GEN-LAST:event_btnLogOutActionPerformed
    /** Make Enquiry Button
     * <p>
     * Makes an enquiry for the selected job.
     */
    private void makeEnquiry_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_makeEnquiry_btnActionPerformed
        int row = jobs_tbl.getSelectedRow();
        if (row == -1){
            JOptionPane.showMessageDialog(null, "Please select a Job!", "Error!", JOptionPane.ERROR_MESSAGE);
        } else {
            Object jobCode = jobs_tbl.getValueAt(row, 1);
            this.dispose();
            MakeEnquiries enquiry = new MakeEnquiries(jobRole, jobCode.toString(), empID);
            enquiry.setVisible(true);
        }
    }//GEN-LAST:event_makeEnquiry_btnActionPerformed
     /** Inspect Tasks Button
     * <p>
     * Shows the list of tasks associated with the job.
     */
    private void inspectTasks_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inspectTasks_btnActionPerformed
        int row = jobs_tbl.getSelectedRow();
        if (row == -1){
            JOptionPane.showMessageDialog(null, "Please select a Job!", "Error!", JOptionPane.ERROR_MESSAGE);
        } else {
            Object jobCode = jobs_tbl.getValueAt(row, 1);
            this.dispose();
            InspectTasks inspTsk = new InspectTasks(jobRole, jobCode.toString(), empID);
            inspTsk.setVisible(true);
        }
    }//GEN-LAST:event_inspectTasks_btnActionPerformed
    /**
     * Search Button
     * <p>
     * Searches through the table.
     */
    private void search_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_btnActionPerformed
        String s = search_txt.getText();
        filter(s);
    }//GEN-LAST:event_search_btnActionPerformed

    private void accptDate_dteInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_accptDate_dteInputMethodTextChanged

    }//GEN-LAST:event_accptDate_dteInputMethodTextChanged
     /**
     * Status state changed
     * <p>
     * Filters the list with the selected Status.
     */
    private void status_cmboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_status_cmboItemStateChanged
        String s = status_cmbo.getSelectedItem().toString();
        filter(s);
    }//GEN-LAST:event_status_cmboItemStateChanged
     /**
     * Priority state changed
     * <p>
     * Filters the list with the selected Priority.
     */
    private void priority_cmboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_priority_cmboItemStateChanged
        String s = priority_cmbo.getSelectedItem().toString();
        filter(s);
    }//GEN-LAST:event_priority_cmboItemStateChanged
     /**
     * Accept Date state changed
     * <p>
     * Gets the date and  Filters the list with the selected Date.
     */
    private void accptDate_dtePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_accptDate_dtePropertyChange
        String s = "";
        String format = accptDate_dte.getDateFormatString();
        if(accptDate_dte.getDate() != null){
            s = new SimpleDateFormat(format).format(accptDate_dte.getDate());
        }
        filterAccptDate(s);
    }//GEN-LAST:event_accptDate_dtePropertyChange

    private void accptDate_dteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_accptDate_dteFocusLost

    }//GEN-LAST:event_accptDate_dteFocusLost
     /**
     * Back Button
     * <p>
     * Closes the form taking you back to the previous form.
     */
    private void back_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_back_btnActionPerformed
        this.dispose();
        HomePage hp = new HomePage(jobRole, empID);
        hp.setVisible(true);
    }//GEN-LAST:event_back_btnActionPerformed
     /**
     * HomePage Button
     * <p>
     * Closes the form and takes you back to the home page form.
     */
    private void btnHomePageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomePageActionPerformed
        this.dispose();
        HomePage hp = new HomePage(jobRole, empID);
        hp.setVisible(true);
    }//GEN-LAST:event_btnHomePageActionPerformed

    private void accptDate_dteVetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {//GEN-FIRST:event_accptDate_dteVetoableChange

    }//GEN-LAST:event_accptDate_dteVetoableChange

    private void deadline_dteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_deadline_dteFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_deadline_dteFocusLost

    private void deadline_dteInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_deadline_dteInputMethodTextChanged

    }//GEN-LAST:event_deadline_dteInputMethodTextChanged
     /**
     * Deadline Date state changed
     * <p>
     * Gets the date and  Filters the list with the selected Date.
     */
    private void deadline_dtePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_deadline_dtePropertyChange
        String s = "";
        String format = deadline_dte.getDateFormatString();
        if(deadline_dte.getDate() != null){
            s = new SimpleDateFormat(format).format(deadline_dte.getDate());
        }
        filterDeadline(s);
    }//GEN-LAST:event_deadline_dtePropertyChange

    private void deadline_dteVetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {//GEN-FIRST:event_deadline_dteVetoableChange
        // TODO add your handling code here:
    }//GEN-LAST:event_deadline_dteVetoableChange
     /** Reset Button
     * <p>
     *  Empties the text in the fields
     */
    private void reset_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reset_btnActionPerformed
        search_txt.setText("");
        status_cmbo.setSelectedIndex(0);
        priority_cmbo.setSelectedIndex(0);
        accptDate_dte.setDate(null);
        deadline_dte.setDate(null);
        filter("");
    }//GEN-LAST:event_reset_btnActionPerformed
    /** Make Payment Button
     * <p>
     * Takes the selected Job and takes you to the payment form. 
     */
    private void makePayment_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_makePayment_btnActionPerformed
        int row = jobs_tbl.getSelectedRow();
        if (row == -1){
            JOptionPane.showMessageDialog(null, "Please select a Job!", "Error!", JOptionPane.ERROR_MESSAGE);
        } else {
            try {
                Object custID = jobs_tbl.getValueAt(row, 0);
                Object jobCode = jobs_tbl.getValueAt(row, 1);
                Customer cust = new Customer(custID.toString());
                Job job = new Job(jobCode.toString());
                
                DBConnectivity myDB = new DBConnectivity();
                myDB.connect();
                ResultSet rs = myDB.read("SELECT status FROM Job INNER JOIN Invoice USING(invoice_ID) WHERE invoice_ID = " + job.getInvoiceID());
                boolean allCompleted = true;
                while (rs.next()){
                    if (!rs.getString("status").equals("Completed")){
                        allCompleted = false;
                    }
                }
                myDB.closeConnection();
                
                if (allCompleted){
                    this.dispose();
                    PaymentForm paymnt = new PaymentForm(jobRole, cust, job, empID);
                    paymnt.setVisible(true);
                } else {
                    JOptionPane.showMessageDialog(null, "Not all jobs for the relevant invoice associated to this job are completed!", "Error!", JOptionPane.ERROR_MESSAGE);
                }
            } catch (SQLException ex) {
                Logger.getLogger(Inspect_Jobs.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_makePayment_btnActionPerformed
    /**
     * Sort List
     * <p>
     * Populates the table with the Tasks data.
     */
    public void sort(){
        DefaultTableModel dm = (DefaultTableModel) jobs_tbl.getModel();
        TableRowSorter<DefaultTableModel> trs = new TableRowSorter<>(dm);
        jobs_tbl.setRowSorter(trs);
    }
    
     /**
     * Filter List
     * <p>
     * Filters through the list with the Tasks data.
     */
    public void filter(String s){
        DefaultTableModel dm = (DefaultTableModel) jobs_tbl.getModel();
        TableRowSorter<DefaultTableModel> trs = new TableRowSorter<>(dm);
        jobs_tbl.setRowSorter(trs);
        
        if (!"None".equals(s) || s.isEmpty()){
            trs.setRowFilter(RowFilter.regexFilter(s));
        } else {
            jobs_tbl.setRowSorter(trs);
        }
    }
     /**
     * Filter accept date
     * <p>
     * Filters through the list with the Tasks data from accept date.
     */
    public void filterAccptDate(String s){
        DefaultTableModel dm = (DefaultTableModel) jobs_tbl.getModel();
        TableRowSorter<DefaultTableModel> trs = new TableRowSorter<>(dm);
        jobs_tbl.setRowSorter(trs);
        
        if (!"None".equals(s) || s.isEmpty()){
            trs.setRowFilter(RowFilter.regexFilter(s, 5));
        } else {
            jobs_tbl.setRowSorter(trs);
        }
    }
      /**
     * Filter Deadline
     * <p>
     * Filters through the list with the Tasks data from deadline.
     */
    public void filterDeadline(String s){
        DefaultTableModel dm = (DefaultTableModel) jobs_tbl.getModel();
        TableRowSorter<DefaultTableModel> trs = new TableRowSorter<>(dm);
        jobs_tbl.setRowSorter(trs);
        
        if (!"None".equals(s) || s.isEmpty()){
            trs.setRowFilter(RowFilter.regexFilter(s, 7));
        } else {
            jobs_tbl.setRowSorter(trs);
        }
    }
    /**
     * Table
     * <p>
     * Creates a table 
     * @return populated table.
     */
    public static DefaultTableModel resultSetToTableModel(ResultSet rs) {
        ResultSetMetaData md;
        
        Vector<String> columnNames = new Vector<>();
        Vector<Vector<Object>> data = new Vector<>();
        
        try {
            md = rs.getMetaData();
            
            // names of columns
            int columnCount = md.getColumnCount();
            for (int i = 1; i <= columnCount; i++) {
                columnNames.add(md.getColumnLabel(i));
            }

            // data of the table
            while (rs.next()) {
                Vector<Object> vector = new Vector<>();
                for (int i = 1; i <= columnCount; i++) {
                    vector.add(rs.getObject(i));
                }
                data.add(vector);
            }
        
        } catch (SQLException ex) {
            Logger.getLogger(InspectTasks.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        return new DefaultTableModel(data, columnNames);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inspect_Jobs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inspect_Jobs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inspect_Jobs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inspect_Jobs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Inspect_Jobs("Office Manager", "FG12").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser accptDate_dte;
    private javax.swing.JLabel accptDate_lbl;
    private javax.swing.JButton back_btn;
    private javax.swing.JButton btnHomePage;
    private javax.swing.JButton btnLogOut;
    private com.toedter.calendar.JDateChooser deadline_dte;
    private javax.swing.JLabel deadline_lbl;
    private javax.swing.JButton inspectTasks_btn;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTable jobs_tbl;
    private javax.swing.JButton makeEnquiry_btn;
    private javax.swing.JButton makePayment_btn;
    private javax.swing.JComboBox<String> priority_cmbo;
    private javax.swing.JLabel priority_lbl;
    private javax.swing.JButton reset_btn;
    private javax.swing.JButton search_btn;
    private javax.swing.JLabel search_lbl;
    private javax.swing.JTextField search_txt;
    private javax.swing.JComboBox<String> status_cmbo;
    private javax.swing.JLabel status_lbl;
    // End of variables declaration//GEN-END:variables
}
